{"meta":{"title":"滚~韬的博客","subtitle":"滚~","description":"一个普通大学生的博客","author":"滚~韬","url":"https://gwtt.github.io","root":"/"},"pages":[{"title":"标签","date":"2022-06-11T02:24:27.000Z","updated":"2022-06-11T02:35:07.018Z","comments":true,"path":"tag/index.html","permalink":"https://gwtt.github.io/tag/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-06-11T02:24:29.000Z","updated":"2022-06-11T02:34:49.842Z","comments":true,"path":"category/index.html","permalink":"https://gwtt.github.io/category/index.html","excerpt":"","text":""},{"title":"关于这个博客","date":"2022-06-11T02:34:12.102Z","updated":"2022-06-11T02:34:12.102Z","comments":true,"path":"about/index.html","permalink":"https://gwtt.github.io/about/index.html","excerpt":"","text":"​ 自我高二学习C#以来，到了大二才开始创建自己的博客，也可能是分手的缘故，让我重新开始审视自己。我学习代码已有5年了，遗憾的是，已经不再是抱着做游戏心态去学习代码，而是为了现实学习后端。加油吧。"}],"posts":[{"title":"linklist和arraylist的区别","slug":"linklist和arraylist的区别","date":"2022-06-11T03:22:48.894Z","updated":"2022-06-11T03:36:05.183Z","comments":true,"path":"2022/06/11/linklist和arraylist的区别/","link":"","permalink":"https://gwtt.github.io/2022/06/11/linklist%E5%92%8Carraylist%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"什么时候用list什么时候用数组，linklist和arraylist的区别以及什么时候用link什么时候用array 当数据量固定时或者多维度时，我们可以使用数组，而当我们可以根据需要自动扩充，修改数据时，应该使用list linklist和arraylist的区别 ArrayList是实现了基于动态数组的数据结构，LinkedList基于链表的数据结构。 对于随机访问get和set，ArrayList优于LinkedList，因为LinkedList要移动指针。 对于新增和删除操作add和remove，LinkedList比较占优势，因为ArrayList要移动数据。","categories":[{"name":"java基础","slug":"java基础","permalink":"https://gwtt.github.io/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java","slug":"java","permalink":"https://gwtt.github.io/tags/java/"},{"name":"基本数据类型","slug":"基本数据类型","permalink":"https://gwtt.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"}]},{"title":"int和interger的区别","slug":"int和integer区别","date":"2022-06-11T03:07:00.000Z","updated":"2022-06-11T03:11:15.102Z","comments":true,"path":"2022/06/11/int和integer区别/","link":"","permalink":"https://gwtt.github.io/2022/06/11/int%E5%92%8Cinteger%E5%8C%BA%E5%88%AB/","excerpt":"","text":"int和interger的区别 Integer是int的包装类；int是基本数据类型； Integer变量必须实例化后才能使用；int变量不需要； Integer实际是对象的引用，指向此new的Integer对象；int是直接存储数据值 ； Integer的默认值是null；int的默认值是0。 延伸：关于Integer和int的比较1、由于Integer变量实际上是对一个Integer对象的引用，所以两个通过new生成的Integer变量永远是不相等的（因为new生成的是两个对象，其内存地址不同）。 123Integer i = new Integer(100);Integer j = new Integer(100);System.out.print(i == j); //false 2、Integer变量和int变量比较时，只要两个变量的值是向等的，则结果为true（因为包装类Integer和基本数据类型int比较时，java会自动拆包装为int，然后进行比较，实际上就变为两个int变量的比较） 123Integer i = new Integer(100);int j = 100；System.out.print(i == j); //true 3、非new生成的Integer变量和new Integer()生成的变量比较时，结果为false。（因为 ①当变量值在-128127之间时，非new生成的Integer变量指向的是java常量池中的对象，而new Integer()生成的变量指向堆中新建的对象，两者在内存中的地址不同；②当变量值不在-128127之间时，非new生成Integer变量时，java API中最终会按照new Integer(i)进行处理（参考下面第4条），最终两个Interger的地址同样是不相同的） 123Integer i = new Integer(100);Integer j = 100;System.out.print(i == j); //false 4、对于两个非new生成的Integer对象，进行比较时，如果两个变量的值在区间-128到127之间，则比较结果为true，如果两个变量的值不在此区间，则比较结果为false 123456Integer i = 100;Integer j = 100;System.out.print(i == j); //trueInteger i = 128;Integer j = 128;System.out.print(i == j); //false 对于第4条的原因：java在编译Integer i = 100 ;时，会翻译成为Integer i = Integer.valueOf(100)；，而java API中对Integer类型的valueOf的定义如下： 1234567public static Integer valueOf(int i)&#123; assert IntegerCache.high &gt;= 127; if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)&#123; return IntegerCache.cache[i + (-IntegerCache.low)]; &#125; return new Integer(i);&#125; java对于-128到127之间的数，会进行缓存，Integer i = 127时，会将127进行缓存，下次再写Integer j = 127时，就会直接从缓存中取，就不会new了","categories":[{"name":"java基础","slug":"java基础","permalink":"https://gwtt.github.io/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java","slug":"java","permalink":"https://gwtt.github.io/tags/java/"},{"name":"基本数据类型","slug":"基本数据类型","permalink":"https://gwtt.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"}]}],"categories":[{"name":"java基础","slug":"java基础","permalink":"https://gwtt.github.io/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java","slug":"java","permalink":"https://gwtt.github.io/tags/java/"},{"name":"基本数据类型","slug":"基本数据类型","permalink":"https://gwtt.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"}]}